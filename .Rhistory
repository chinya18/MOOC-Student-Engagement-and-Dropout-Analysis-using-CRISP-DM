renv::init()
renv::install('dplyr', 'ggplot2', 'tidyverse')
renv::settings$snapshot.type('all')
renv::snapshot()
## Modelling
After the completion of data preparation, I once again circled back to review the previous phases to ensure there was no deviation from the plan or potential impacts to the output to come from the analysis in this next phase. As no issues were found I progressed to the next phase of the CRISP-DM process i.e. performing exploratory data analysis on the new tidy data frame.
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = normalizePath('..'))
library(ProjectTemplate)
## Introduction
This report intends to analyse the performance and patterns in quiz responses of different students in Newcastle University's data of various conducted courses. The analysis follows the CRISP-DM methodology, which is divided over two cycles:
renv::status()
library(tidyverse)
renv::install('kableExtra')
renv::snapshot()
library(ProjectTemplate)
load.project()
library(ProjectTemplate)
load.project()
mcq_responses = All_data %>%
separate_rows(response, sep = ",") %>%
group_by(quiz_question, response) %>%
summarise(response_count = n()) %>%
arrange(quiz_question, desc(response_count))
mcq_responses = All_data %>%
separate_rows(response, sep = ",") %>%
group_by(quiz_question, response) %>%
summarise(response_count = n()) %>%
arrange(quiz_question, desc(response_count))
3. Ambiguity: Highlighting the questions with evenly distributed responses, indicating possible confusion.
View(All_data)
View(All_data)
#Data Cleaning and transformation
#Combining all 7 CSV Files
All_data = bind_rows(cybersecurity_1_question_response,
cybersecurity_2_question_response,
cybersecurity_3_question_response,
cybersecurity_4_question_response,
cybersecurity_5_question_response,
cybersecurity_6_question_response,
cybersecurity_7_question_response)
#Data Cleaning and transformation
#Combining all 7 CSV Files
library(tidyverse)
All_data = bind_rows(cybersecurity_1_question_response,
cybersecurity_2_question_response,
cybersecurity_3_question_response,
cybersecurity_4_question_response,
cybersecurity_5_question_response,
cybersecurity_6_question_response,
cybersecurity_7_question_response)
#Checking the percentage of missing values for each column
sapply(All_data, function(x) mean(is.na(x))) * 100
#Confirming that 'cloze_response' has all NAs
all(is.na(All_data$cloze_response))
#droping the 'cloze_response' column
All_data <- All_data %>%
select(-cloze_response)
#Changing the datatype of 'correct' column to numeric (0 or 1), instead of TRUE or FALSE
All_data = All_data %>%
mutate(correct = as.integer(as.logical(All_data$correct)))
#converting the 'submitted_at' column to a datetime type is highly recommended.
#This will allow to perform operations like sorting by submission time, calculating time differences or grouping by dates
All_data <- All_data %>%
mutate(submitted_at = as.POSIXct(submitted_at, format = "%Y-%m-%d %H:%M:%S"))
View(All_data)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = normalizePath('..'))
ggplot(response_summary, aes(x = reorder(response, -count), y = count)) +
geom_segment(aes(x = response, xend = response, y = 0, yend = count), color = "grey") +
geom_point(size = 3, color = "steelblue") +
labs(title = "Lollipop Chart of Frequently Chosen Options", x = "Response Option", y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = normalizePath('..'))
library(ProjectTemplate)
load.project()
library(ProjectTemplate)
load.project()
library(ProjectTemplate)
load.project()
library(ProjectTemplate)
load.project()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = normalizePath('..'))
library(ProjectTemplate)
load.project()
